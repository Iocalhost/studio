// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Re-ranks unit recommendations based on their confidence score after a game balance update.
 *
 * - reRankRecommendations - A function that handles the re-ranking of unit recommendations.
 * - ReRankRecommendationsInput - The input type for the reRankRecommendations function.
 * - ReRankRecommendationsOutput - The return type for the reRankRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ReRankRecommendationsInputSchema = z.object({
  unitRecommendations: z
    .array(z.object({
      unitName: z.string(),
      confidenceScore: z.number().min(0).max(1), // Confidence score between 0 and 1
      rationale: z.string().optional(), // Optional rationale for the recommendation
    }))
    .describe('An array of unit recommendations with their current confidence scores and rationales.'),
  balanceUpdateDescription: z
    .string()
    .describe('A description of the balance update released in the game.'),
});

export type ReRankRecommendationsInput = z.infer<typeof ReRankRecommendationsInputSchema>;

const ReRankRecommendationsOutputSchema = z.array(z.object({
  unitName: z.string(),
  confidenceScore: z.number().min(0).max(1),
  rationale: z.string().optional(),
}));

export type ReRankRecommendationsOutput = z.infer<typeof ReRankRecommendationsOutputSchema>;

export async function reRankRecommendations(input: ReRankRecommendationsInput): Promise<ReRankRecommendationsOutput> {
  return reRankRecommendationsFlow(input);
}

const reRankRecommendationsPrompt = ai.definePrompt({
  name: 'reRankRecommendationsPrompt',
  input: {
    schema: ReRankRecommendationsInputSchema,
  },
  output: {
    schema: ReRankRecommendationsOutputSchema,
  },
  prompt: `You are an expert game analyst for Conqueror's Blade. The game has just released a balance update. Re-rank the following list of unit recommendations based on how effective they are after the following game balance update. Return an updated list with the same unit names and updated confidence scores, reflecting their effectiveness after the balance changes.

Balance Update Description: {{{balanceUpdateDescription}}}

Current Unit Recommendations:
{{#each unitRecommendations}}
- Unit Name: {{{unitName}}}, Confidence Score: {{{confidenceScore}}}, Rationale: {{{rationale}}}
{{/each}}

Output the re-ranked unit recommendations with updated confidence scores, formatted as a JSON array.
`,
});

const reRankRecommendationsFlow = ai.defineFlow(
  {
    name: 'reRankRecommendationsFlow',
    inputSchema: ReRankRecommendationsInputSchema,
    outputSchema: ReRankRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await reRankRecommendationsPrompt(input);
    return output!;
  }
);
